// .tag {
//   max-width: 100%;
//   font-family: "Roboto", "Helvetica", "Arial", sans-serif;
//   font-size: 0.8125rem;
//   display: -webkit-inline-box;
//   display: -webkit-inline-flex;
//   display: -ms-inline-flexbox;
//   display: inline-flex;
//   -webkit-align-items: center;
//   -webkit-box-align: center;
//   -ms-flex-align: center;
//   align-items: center;
//   -webkit-box-pack: center;
//   -ms-flex-pack: center;
//   -webkit-justify-content: center;
//   justify-content: center;
//   color: rgba(0, 0, 0, 0.87);
//   background-color: rgba(0, 0, 0, 0.08);
//   border-radius: 16px;
//   white-space: nowrap;
//   -webkit-transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
//     box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
//   transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
//     box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
//   cursor: unset;
//   outline: 0;
//   -webkit-text-decoration: none;
//   text-decoration: none;
//   border: 0;
//   padding: 8px 16px;
//   vertical-align: middle;
//   box-sizing: border-box;

//   span {
//     overflow: hidden;
//     text-overflow: ellipsis;
//     white-space: nowrap;
//   }
// }


// .tag--shadow{
//     box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;}

// .tag--outlined{
//         background-color: transparent;
//         border: 1px solid #bdbdbd;
// }

// .tag--plain{
//     border:0;
//     background-color: transparent;
// }

// .tag--primary{
//     background-color: rgb(25, 118, 210);
//     color : white;
// }

// .tag--secondary{
//     background-color: rgb(156, 39, 176);
//     color: white;
// }

// .tag--error{
//     background-color: rgb(211, 47, 47);
//     color: white;
// }

// .tag--info{
//     background-color: rgb(2, 136, 209);
//     color: white;
// }

// .tag--success{
//     background-color: rgb(46, 125, 50);
//     color: white;
// }

// .tag--warning{
// background-color: rgb(237, 108, 2);
// color:white
// }



// Define your color palette
$color-default: rgba(0, 0, 0, 0.87);
$color-primary: rgb(25, 118, 210);
$color-secondary: rgb(156, 39, 176);
$color-error: rgb(211, 47, 47);
$color-info: rgb(2, 136, 209);
$color-success: rgb(46, 125, 50);
$color-warning: rgb(237, 108, 2);

// Define a mixin to generate CSS for different variants and colors
@mixin generate-tag-style($variant, $color) {
  .tag--#{$variant}--#{$color} {
    @if $variant =="outlined" or $variant =="plain" {
      background-color: transparent;
      color: white;
      border: 1px solid #bdbdbd; // Common border style for outlined and plain
    }

    @else if $variant =="shadow" {
      box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
      background-color: $color;
      color: white;
    }

    @else {
      background-color: $color;
      color: white;
    }
  }
}

// Define a list of variants and colors
$variants: solid, outlined, shadow, plain;
$colors: default, primary, secondary, error, info, success, warning;

// Generate CSS for all combinations of variants and colors
.tag {
  max-width: 100%;
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 0.8125rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  white-space: nowrap;
  -webkit-transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
    box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
    box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  cursor: unset;
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  padding: 8px 16px;
  vertical-align: middle;
  box-sizing: border-box;

  span {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

}

@each $variant in $variants {
  @each $color in $colors {
    @include generate-tag-style($variant, $color);
  }
}