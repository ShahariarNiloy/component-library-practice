$colorsPallet: (
    default: rgb(182, 182, 182),
    primary: rgb(25, 118, 210),
    secondary: rgb(156, 39, 176),
    error: rgb(211, 47, 47),
    info: rgb(2, 136, 209),
    success: rgb(46, 125, 50),
    warning: rgb(237, 108, 2)
);

$variants: solid, outlined, shadow, plain;
$colors: default, primary, secondary, error, info, success, warning;

@mixin generate-tag-variant-color($variant, $color) {
    $color-value: map-get($colorsPallet, $color);

    .tag--#{$variant}--#{$color} {
        background-color: if($variant == "solid" or $variant == "shadow",$color-value,transparent);
        color: if($color == "default", black, if($variant == "outlined" or $variant == "plain", $color-value, white));

        @if $variant == "outlined" {
            border: 1px solid if($color == "default", black, $color-value);
        }

        @if $variant == "plain" {
            border: 1px solid transparent;
        }

        @if $variant == "shadow" {
            box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
             border: 1px solid $color-value;
        }

        @if $variant == "solid" {
            border: 1px solid $color-value;
        }
    }
}

$sizes: (
    sm: (
        padding: 3px 6px,
        font-size: 0.875rem,
    ),
    md: (
        padding: 6px 12px,
        font-size: 1rem,
    ),
    lg: (
        padding: 12px 16px,
        font-size: 1.25rem,
    )
);

@mixin generate-tag-size($size: md) {
    $size-styles: map-get($sizes, $size);
    .tag-size--#{$size} {
        padding: map-get($size-styles, "padding");
        font-size: map-get($size-styles, "font-size");
    }
}

$radiuses:(
    sm:8px,
    md: 12px,
    lg:14px,
    full:9999px,
    none:0px
);



@mixin generate-tag-radius ($radius:sm){
.tag-radius--#{$radius} {
        border-radius: map-get($radiuses, $radius );
    }
}

$iconPositions : (
    left: row,
    right:row-reverse,
    top:column,
    bottom:column-reverse,
);

@mixin generate-tag-icon-position ($iconPosition:left){
    
.tag-icon-position--#{$iconPosition} {
    gap:5px;
       flex-direction: map-get($iconPositions, $iconPosition);
    }
}

.tag {
    max-width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    cursor: unset;
    outline: 0;
    text-decoration: none;
    vertical-align: middle;
    box-sizing: border-box;

    span {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

}

@each $variant in $variants {
    @each $color in $colors {
        @include generate-tag-variant-color($variant, $color);
    }
}

@each $size in map-keys($sizes) {
    @include generate-tag-size($size);
}

@each $radius in map-keys($radiuses) {
    @include generate-tag-radius($radius);
}
@each $iconPosition in map-keys($iconPositions) {
    @include generate-tag-icon-position($iconPosition);
}




